<?php

namespace DoctrineORMModule\Proxy\__CG__\Space\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class System extends \Space\Entity\System implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'label', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'cpu', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'ppu', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'ppuTrial', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'ippu', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'quantity', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'hours', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'legacyWatts', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'legacyQuantity', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'legacyMcpu', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'lux', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'occupancy', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'locked', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'attributes', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'space', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'product', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'legacy', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'systemId', 'inputFilter');
        }

        return array('__isInitialized__', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'label', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'cpu', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'ppu', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'ppuTrial', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'ippu', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'quantity', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'hours', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'legacyWatts', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'legacyQuantity', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'legacyMcpu', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'lux', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'occupancy', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'locked', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'attributes', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'space', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'product', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'legacy', '' . "\0" . 'Space\\Entity\\System' . "\0" . 'systemId', 'inputFilter');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (System $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPpuTrial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPpuTrial', array());

        return parent::getPpuTrial();
    }

    /**
     * {@inheritDoc}
     */
    public function setPpuTrial($ppuTrial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPpuTrial', array($ppuTrial));

        return parent::setPpuTrial($ppuTrial);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', array());

        return parent::getLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function getCpu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCpu', array());

        return parent::getCpu();
    }

    /**
     * {@inheritDoc}
     */
    public function getPpu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPpu', array());

        return parent::getPpu();
    }

    /**
     * {@inheritDoc}
     */
    public function getIppu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIppu', array());

        return parent::getIppu();
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', array());

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function getHours()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHours', array());

        return parent::getHours();
    }

    /**
     * {@inheritDoc}
     */
    public function getLegacyWatts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLegacyWatts', array());

        return parent::getLegacyWatts();
    }

    /**
     * {@inheritDoc}
     */
    public function getLegacyQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLegacyQuantity', array());

        return parent::getLegacyQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function getLegacyMcpu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLegacyMcpu', array());

        return parent::getLegacyMcpu();
    }

    /**
     * {@inheritDoc}
     */
    public function getLux()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLux', array());

        return parent::getLux();
    }

    /**
     * {@inheritDoc}
     */
    public function getOccupancy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOccupancy', array());

        return parent::getOccupancy();
    }

    /**
     * {@inheritDoc}
     */
    public function getLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocked', array());

        return parent::getLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function getSpace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpace', array());

        return parent::getSpace();
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', array());

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function getLegacy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLegacy', array());

        return parent::getLegacy();
    }

    /**
     * {@inheritDoc}
     */
    public function getSystemId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getSystemId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSystemId', array());

        return parent::getSystemId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', array($label));

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function setCpu($cpu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCpu', array($cpu));

        return parent::setCpu($cpu);
    }

    /**
     * {@inheritDoc}
     */
    public function setPpu($ppu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPpu', array($ppu));

        return parent::setPpu($ppu);
    }

    /**
     * {@inheritDoc}
     */
    public function setIppu($ippu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIppu', array($ippu));

        return parent::setIppu($ippu);
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', array($quantity));

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function setHours($hours)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHours', array($hours));

        return parent::setHours($hours);
    }

    /**
     * {@inheritDoc}
     */
    public function setLegacyWatts($legacyWatts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLegacyWatts', array($legacyWatts));

        return parent::setLegacyWatts($legacyWatts);
    }

    /**
     * {@inheritDoc}
     */
    public function setLegacyQuantity($legacyQuantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLegacyQuantity', array($legacyQuantity));

        return parent::setLegacyQuantity($legacyQuantity);
    }

    /**
     * {@inheritDoc}
     */
    public function setLegacyMcpu($legacyMcpu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLegacyMcpu', array($legacyMcpu));

        return parent::setLegacyMcpu($legacyMcpu);
    }

    /**
     * {@inheritDoc}
     */
    public function setLux($lux)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLux', array($lux));

        return parent::setLux($lux);
    }

    /**
     * {@inheritDoc}
     */
    public function setOccupancy($occupancy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOccupancy', array($occupancy));

        return parent::setOccupancy($occupancy);
    }

    /**
     * {@inheritDoc}
     */
    public function setLocked($locked)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocked', array($locked));

        return parent::setLocked($locked);
    }

    /**
     * {@inheritDoc}
     */
    public function setSpace($space)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpace', array($space));

        return parent::setSpace($space);
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct($product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', array($product));

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function setLegacy($legacy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLegacy', array($legacy));

        return parent::setLegacy($legacy);
    }

    /**
     * {@inheritDoc}
     */
    public function setSystemId($systemId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSystemId', array($systemId));

        return parent::setSystemId($systemId);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributes', array());

        return parent::getAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributes($attributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributes', array($attributes));

        return parent::setAttributes($attributes);
    }

    /**
     * {@inheritDoc}
     */
    public function populate($data = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'populate', array($data));

        return parent::populate($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrayCopy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrayCopy', array());

        return parent::getArrayCopy();
    }

    /**
     * {@inheritDoc}
     */
    public function setInputFilter(\Zend\InputFilter\InputFilterInterface $inputFilter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInputFilter', array($inputFilter));

        return parent::setInputFilter($inputFilter);
    }

    /**
     * {@inheritDoc}
     */
    public function getInputFilter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInputFilter', array());

        return parent::getInputFilter();
    }

}
