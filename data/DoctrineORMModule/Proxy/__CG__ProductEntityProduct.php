<?php

namespace DoctrineORMModule\Proxy\__CG__\Product\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \Product\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'model', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'cpu', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'ppu', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'ibppu', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'ppuTrial', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'active', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'eca', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'mcd', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'pwr', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'created', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'brand', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'type', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'sagepay', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'attributes', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'productId');
        }

        return array('__isInitialized__', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'model', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'cpu', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'ppu', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'ibppu', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'ppuTrial', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'active', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'eca', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'mcd', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'pwr', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'created', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'brand', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'type', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'sagepay', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'attributes', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'productId');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getBrand()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrand', array());

        return parent::getBrand();
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function getModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModel', array());

        return parent::getModel();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getCpu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCpu', array());

        return parent::getCpu();
    }

    /**
     * {@inheritDoc}
     */
    public function getPpu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPpu', array());

        return parent::getPpu();
    }

    /**
     * {@inheritDoc}
     */
    public function getIbppu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIbppu', array());

        return parent::getIbppu();
    }

    /**
     * {@inheritDoc}
     */
    public function getPpuTrial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPpuTrial', array());

        return parent::getPpuTrial();
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function getEca()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEca', array());

        return parent::getEca();
    }

    /**
     * {@inheritDoc}
     */
    public function getMcd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMcd', array());

        return parent::getMcd();
    }

    /**
     * {@inheritDoc}
     */
    public function getPwr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPwr', array());

        return parent::getPwr();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getSagepay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSagepay', array());

        return parent::getSagepay();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getProductId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductId', array());

        return parent::getProductId();
    }

    /**
     * {@inheritDoc}
     */
    public function setModel($model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModel', array($model));

        return parent::setModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function setCpu($cpu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCpu', array($cpu));

        return parent::setCpu($cpu);
    }

    /**
     * {@inheritDoc}
     */
    public function setPpu($ppu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPpu', array($ppu));

        return parent::setPpu($ppu);
    }

    /**
     * {@inheritDoc}
     */
    public function setIbppu($ibppu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIbppu', array($ibppu));

        return parent::setIbppu($ibppu);
    }

    /**
     * {@inheritDoc}
     */
    public function setPpuTrial($ppuTrial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPpuTrial', array($ppuTrial));

        return parent::setPpuTrial($ppuTrial);
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function setBrand($brand)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrand', array($brand));

        return parent::setBrand($brand);
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function setEca($eca)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEca', array($eca));

        return parent::setEca($eca);
    }

    /**
     * {@inheritDoc}
     */
    public function setMcd($mcd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMcd', array($mcd));

        return parent::setMcd($mcd);
    }

    /**
     * {@inheritDoc}
     */
    public function setPwr($pwr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPwr', array($pwr));

        return parent::setPwr($pwr);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated(\DateTime $created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function setProductId($productId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductId', array($productId));

        return parent::setProductId($productId);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributes', array());

        return parent::getAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributes($attributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributes', array($attributes));

        return parent::setAttributes($attributes);
    }

    /**
     * {@inheritDoc}
     */
    public function setSagepay($sagepay)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSagepay', array($sagepay));

        return parent::setSagepay($sagepay);
    }

}
